Measures of Center

# Measures of center: mean
np.mean(msleep['sleep_total'])

# Measures of center: median
np.median(msleep['sleep_total'])

# Measures of center: mode
import statistics
statistics.mode(msleep['vore'])

# Measures of Spread

# Calculating variance
dists = msleep['sleep_total'] - np.mean(msleep['sleep_total']  # subtract mean from each data point
sq_dists = dists ** 2  # square each distance
sum_sq_dists = np.sum(sq_dists) # sum squared distances
variance = sum_sq_dists / (83 - 1) # Divide by number of data points - 1

np.var(msleep['sleep_total'], ddof=1) without ddof=1 population variance is calculated instead of sample variance

# Standard Deviation
np.sqrt(np.var(msleep['sleep_total'], ddof=1))

np.std(msleep['sleep_total'], ddof=1)

# Mean absolute deviation
dists = msleep['sleep_total'] - mean(msleep$sleep_total)
np.mean(np.abs(dists))

# Quantiles
np.quantile(msleep['sleep_total'], 0.5)
np.quantile(msleep['sleep_total'], [0, 0.25, 0.5, 0.75, 1])

# Boxplots use quartiles
plt.boxplot(msleep['sleep_total']

# Quantiles using np.linspace()
np.linspace(start, stop, num)
np.quantile(msleep['sleep_total'], np.linspace(0, 1, 5))

# Interquartile range (IQR)
np.quantile(msleep['sleep_total'], 0.75) - np.quantile(msleep['sleep_total'], 0.25) # Height of the box in a boxplot
iqr(msleep['sleep_total'])

# Outliers
data < Q1 - 1.5 X IQR or data > Q3 + 1.5 X IQR

iqr = iqr(msleep['bodywt'])
lower_threshold = np.quantile(msleep['bodywt'], 0.25) - 1.5 * iqr
upper_threshold = np.quantile(msleep['bodywt'], 0.75) + 1.5 * iqr

msleep[(msleep['bodywt'] < lower_threshold) | (msleep['bodywt'] > upper_threshold)]

# All in one go
msleep['bodywt'].describe()












